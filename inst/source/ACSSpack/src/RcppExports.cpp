// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// pqr
NumericVector pqr(float sigma2, int k, NumericVector lq, NumericVector l1q, NumericVector lr2, NumericVector l1r2, NumericVector c1, NumericVector area, float cterm, NumericVector z, int a, int b, int A, int B);
RcppExport SEXP _ACSSpack_pqr(SEXP sigma2SEXP, SEXP kSEXP, SEXP lqSEXP, SEXP l1qSEXP, SEXP lr2SEXP, SEXP l1r2SEXP, SEXP c1SEXP, SEXP areaSEXP, SEXP ctermSEXP, SEXP zSEXP, SEXP aSEXP, SEXP bSEXP, SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lq(lqSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type l1q(l1qSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lr2(lr2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type l1r2(l1r2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type c1(c1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type area(areaSEXP);
    Rcpp::traits::input_parameter< float >::type cterm(ctermSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type A(ASEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(pqr(sigma2, k, lq, l1q, lr2, l1r2, c1, area, cterm, z, a, b, A, B));
    return rcpp_result_gen;
END_RCPP
}
// pz
arma::vec pz(arma::vec z, arma::vec zp, float r2, float q, arma::vec y, arma::mat X, arma::mat U, arma::vec phi, int Tn, int k);
RcppExport SEXP _ACSSpack_pz(SEXP zSEXP, SEXP zpSEXP, SEXP r2SEXP, SEXP qSEXP, SEXP ySEXP, SEXP XSEXP, SEXP USEXP, SEXP phiSEXP, SEXP TnSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type zp(zpSEXP);
    Rcpp::traits::input_parameter< float >::type r2(r2SEXP);
    Rcpp::traits::input_parameter< float >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< int >::type Tn(TnSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(pz(z, zp, r2, q, y, X, U, phi, Tn, k));
    return rcpp_result_gen;
END_RCPP
}
// pz_nphi
arma::vec pz_nphi(arma::vec z, arma::vec zp, float r2, float q, arma::vec y, arma::mat X, int Tn, int k);
RcppExport SEXP _ACSSpack_pz_nphi(SEXP zSEXP, SEXP zpSEXP, SEXP r2SEXP, SEXP qSEXP, SEXP ySEXP, SEXP XSEXP, SEXP TnSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type zp(zpSEXP);
    Rcpp::traits::input_parameter< float >::type r2(r2SEXP);
    Rcpp::traits::input_parameter< float >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type Tn(TnSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(pz_nphi(z, zp, r2, q, y, X, Tn, k));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ACSSpack_pqr", (DL_FUNC) &_ACSSpack_pqr, 14},
    {"_ACSSpack_pz", (DL_FUNC) &_ACSSpack_pz, 10},
    {"_ACSSpack_pz_nphi", (DL_FUNC) &_ACSSpack_pz_nphi, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_ACSSpack(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
