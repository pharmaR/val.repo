// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// mycbind
arma::mat mycbind(arma::colvec& X, const int& l);
RcppExport SEXP _adjSURVCI_mycbind(SEXP XSEXP, SEXP lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int& >::type l(lSEXP);
    rcpp_result_gen = Rcpp::wrap(mycbind(X, l));
    return rcpp_result_gen;
END_RCPP
}
// myrbind
arma::mat myrbind(arma::rowvec& X, const int& l);
RcppExport SEXP _adjSURVCI_myrbind(SEXP XSEXP, SEXP lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int& >::type l(lSEXP);
    rcpp_result_gen = Rcpp::wrap(myrbind(X, l));
    return rcpp_result_gen;
END_RCPP
}
// myColsums
arma::rowvec myColsums(arma::mat& X);
RcppExport SEXP _adjSURVCI_myColsums(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(myColsums(X));
    return rcpp_result_gen;
END_RCPP
}
// myRowsums
arma::colvec myRowsums(const arma::mat& X);
RcppExport SEXP _adjSURVCI_myRowsums(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(myRowsums(X));
    return rcpp_result_gen;
END_RCPP
}
// hhat
arma::cube hhat(const arma::rowvec& g, const arma::mat& S, const arma::mat& zc, const arma::rowvec& dl);
RcppExport SEXP _adjSURVCI_hhat(SEXP gSEXP, SEXP SSEXP, SEXP zcSEXP, SEXP dlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::rowvec& >::type g(gSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type S(SSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type zc(zcSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type dl(dlSEXP);
    rcpp_result_gen = Rcpp::wrap(hhat(g, S, zc, dl));
    return rcpp_result_gen;
END_RCPP
}
// mybetaestCENSORING
Rcpp::List mybetaestCENSORING(const arma::rowvec& times, const arma::rowvec& deltas, const arma::mat& covariates, const arma::rowvec& betas, const arma::rowvec& rhos);
RcppExport SEXP _adjSURVCI_mybetaestCENSORING(SEXP timesSEXP, SEXP deltasSEXP, SEXP covariatesSEXP, SEXP betasSEXP, SEXP rhosSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::rowvec& >::type times(timesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type covariates(covariatesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type rhos(rhosSEXP);
    rcpp_result_gen = Rcpp::wrap(mybetaestCENSORING(times, deltas, covariates, betas, rhos));
    return rcpp_result_gen;
END_RCPP
}
// betaestCOX
Rcpp::List betaestCOX(const arma::rowvec& times, const arma::rowvec& causes, const arma::mat& covariates, const int& nobs, const int& ncovs, const arma::mat& cweight, const arma::rowvec& betas);
RcppExport SEXP _adjSURVCI_betaestCOX(SEXP timesSEXP, SEXP causesSEXP, SEXP covariatesSEXP, SEXP nobsSEXP, SEXP ncovsSEXP, SEXP cweightSEXP, SEXP betasSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::rowvec& >::type times(timesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type causes(causesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type covariates(covariatesSEXP);
    Rcpp::traits::input_parameter< const int& >::type nobs(nobsSEXP);
    Rcpp::traits::input_parameter< const int& >::type ncovs(ncovsSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type cweight(cweightSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type betas(betasSEXP);
    rcpp_result_gen = Rcpp::wrap(betaestCOX(times, causes, covariates, nobs, ncovs, cweight, betas));
    return rcpp_result_gen;
END_RCPP
}
// betaestKM
Rcpp::List betaestKM(const arma::rowvec& times, const arma::rowvec& causes, const arma::mat& covariates, const int& nobs, const int& ncovs, const arma::rowvec& cweight, const arma::rowvec& betas);
RcppExport SEXP _adjSURVCI_betaestKM(SEXP timesSEXP, SEXP causesSEXP, SEXP covariatesSEXP, SEXP nobsSEXP, SEXP ncovsSEXP, SEXP cweightSEXP, SEXP betasSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::rowvec& >::type times(timesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type causes(causesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type covariates(covariatesSEXP);
    Rcpp::traits::input_parameter< const int& >::type nobs(nobsSEXP);
    Rcpp::traits::input_parameter< const int& >::type ncovs(ncovsSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type cweight(cweightSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type betas(betasSEXP);
    rcpp_result_gen = Rcpp::wrap(betaestKM(times, causes, covariates, nobs, ncovs, cweight, betas));
    return rcpp_result_gen;
END_RCPP
}
// mylambdaestCENSORING
Rcpp::List mylambdaestCENSORING(const arma::rowvec& times, const arma::rowvec& deltas, const arma::mat& covariates, const arma::rowvec& betas, const arma::rowvec& rhos);
RcppExport SEXP _adjSURVCI_mylambdaestCENSORING(SEXP timesSEXP, SEXP deltasSEXP, SEXP covariatesSEXP, SEXP betasSEXP, SEXP rhosSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::rowvec& >::type times(timesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type covariates(covariatesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type rhos(rhosSEXP);
    rcpp_result_gen = Rcpp::wrap(mylambdaestCENSORING(times, deltas, covariates, betas, rhos));
    return rcpp_result_gen;
END_RCPP
}
// se_beta_lambda_strata_COX_diff
Rcpp::List se_beta_lambda_strata_COX_diff(const arma::rowvec& times, const arma::rowvec& causes, const arma::mat& covariates, const arma::mat& cencovariates, const int& nobs, const int& ntotal, const int& ncovs, const arma::mat& cweight, const arma::rowvec& betas, const arma::rowvec& gammas, const arma::rowvec& cluster, const arma::rowvec& allcluster, const int& nc, const int& totalnc, arma::colvec& expg, const arma::mat& iIc, const arma::mat& iI, const arma::rowvec& idxtlambda, const arma::mat& etapsi, const int& ntotalobs, const arma::mat allcovariates, const arma::rowvec Zpred);
RcppExport SEXP _adjSURVCI_se_beta_lambda_strata_COX_diff(SEXP timesSEXP, SEXP causesSEXP, SEXP covariatesSEXP, SEXP cencovariatesSEXP, SEXP nobsSEXP, SEXP ntotalSEXP, SEXP ncovsSEXP, SEXP cweightSEXP, SEXP betasSEXP, SEXP gammasSEXP, SEXP clusterSEXP, SEXP allclusterSEXP, SEXP ncSEXP, SEXP totalncSEXP, SEXP expgSEXP, SEXP iIcSEXP, SEXP iISEXP, SEXP idxtlambdaSEXP, SEXP etapsiSEXP, SEXP ntotalobsSEXP, SEXP allcovariatesSEXP, SEXP ZpredSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::rowvec& >::type times(timesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type causes(causesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type covariates(covariatesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type cencovariates(cencovariatesSEXP);
    Rcpp::traits::input_parameter< const int& >::type nobs(nobsSEXP);
    Rcpp::traits::input_parameter< const int& >::type ntotal(ntotalSEXP);
    Rcpp::traits::input_parameter< const int& >::type ncovs(ncovsSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type cweight(cweightSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type gammas(gammasSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type cluster(clusterSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type allcluster(allclusterSEXP);
    Rcpp::traits::input_parameter< const int& >::type nc(ncSEXP);
    Rcpp::traits::input_parameter< const int& >::type totalnc(totalncSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type expg(expgSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type iIc(iIcSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type iI(iISEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type idxtlambda(idxtlambdaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type etapsi(etapsiSEXP);
    Rcpp::traits::input_parameter< const int& >::type ntotalobs(ntotalobsSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type allcovariates(allcovariatesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec >::type Zpred(ZpredSEXP);
    rcpp_result_gen = Rcpp::wrap(se_beta_lambda_strata_COX_diff(times, causes, covariates, cencovariates, nobs, ntotal, ncovs, cweight, betas, gammas, cluster, allcluster, nc, totalnc, expg, iIc, iI, idxtlambda, etapsi, ntotalobs, allcovariates, Zpred));
    return rcpp_result_gen;
END_RCPP
}
// se_beta_lambda_strata_COX_diff1
Rcpp::List se_beta_lambda_strata_COX_diff1(const arma::rowvec& times, const arma::rowvec& causes, const arma::mat& covariates, const arma::mat& cencovariates, const int& nobs, const int& nobs1, const int& ncovs, const arma::mat& cweight, const arma::rowvec& betas, const arma::rowvec& gammas, const arma::rowvec& cluster, const arma::rowvec& allcluster, const int& nc, const int& totalnc, arma::colvec& expg, const arma::mat& iIc, const arma::mat& iI, const arma::rowvec& idxtlambda, const arma::mat& etapsi, const arma::cube& zcminusecold, const arma::mat& dMc1, const int& ntotalobs, const arma::mat& allcovariates);
RcppExport SEXP _adjSURVCI_se_beta_lambda_strata_COX_diff1(SEXP timesSEXP, SEXP causesSEXP, SEXP covariatesSEXP, SEXP cencovariatesSEXP, SEXP nobsSEXP, SEXP nobs1SEXP, SEXP ncovsSEXP, SEXP cweightSEXP, SEXP betasSEXP, SEXP gammasSEXP, SEXP clusterSEXP, SEXP allclusterSEXP, SEXP ncSEXP, SEXP totalncSEXP, SEXP expgSEXP, SEXP iIcSEXP, SEXP iISEXP, SEXP idxtlambdaSEXP, SEXP etapsiSEXP, SEXP zcminusecoldSEXP, SEXP dMc1SEXP, SEXP ntotalobsSEXP, SEXP allcovariatesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::rowvec& >::type times(timesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type causes(causesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type covariates(covariatesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type cencovariates(cencovariatesSEXP);
    Rcpp::traits::input_parameter< const int& >::type nobs(nobsSEXP);
    Rcpp::traits::input_parameter< const int& >::type nobs1(nobs1SEXP);
    Rcpp::traits::input_parameter< const int& >::type ncovs(ncovsSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type cweight(cweightSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type gammas(gammasSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type cluster(clusterSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type allcluster(allclusterSEXP);
    Rcpp::traits::input_parameter< const int& >::type nc(ncSEXP);
    Rcpp::traits::input_parameter< const int& >::type totalnc(totalncSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type expg(expgSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type iIc(iIcSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type iI(iISEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type idxtlambda(idxtlambdaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type etapsi(etapsiSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type zcminusecold(zcminusecoldSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type dMc1(dMc1SEXP);
    Rcpp::traits::input_parameter< const int& >::type ntotalobs(ntotalobsSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type allcovariates(allcovariatesSEXP);
    rcpp_result_gen = Rcpp::wrap(se_beta_lambda_strata_COX_diff1(times, causes, covariates, cencovariates, nobs, nobs1, ncovs, cweight, betas, gammas, cluster, allcluster, nc, totalnc, expg, iIc, iI, idxtlambda, etapsi, zcminusecold, dMc1, ntotalobs, allcovariates));
    return rcpp_result_gen;
END_RCPP
}
// se_beta_lambda_strata_COX_diff_unstratified
Rcpp::List se_beta_lambda_strata_COX_diff_unstratified(const arma::rowvec& times, const arma::rowvec& causes, const arma::mat& covariates, const arma::mat& cencovariates, const int& nobs, const int& ntotal, const int& ncovs, const arma::mat& cweight, const arma::rowvec& betas, const arma::rowvec& gammas, const arma::rowvec& cluster, const arma::rowvec& allcluster, const int& nc, const int& totalnc, arma::colvec& expg, const arma::mat& iIc, const arma::mat& iI, const arma::rowvec& idxtlambda, const arma::mat& etapsi, const int& ntotalobs, const arma::mat allcovariates, const arma::rowvec& adjustedbetas, const arma::rowvec Zpred);
RcppExport SEXP _adjSURVCI_se_beta_lambda_strata_COX_diff_unstratified(SEXP timesSEXP, SEXP causesSEXP, SEXP covariatesSEXP, SEXP cencovariatesSEXP, SEXP nobsSEXP, SEXP ntotalSEXP, SEXP ncovsSEXP, SEXP cweightSEXP, SEXP betasSEXP, SEXP gammasSEXP, SEXP clusterSEXP, SEXP allclusterSEXP, SEXP ncSEXP, SEXP totalncSEXP, SEXP expgSEXP, SEXP iIcSEXP, SEXP iISEXP, SEXP idxtlambdaSEXP, SEXP etapsiSEXP, SEXP ntotalobsSEXP, SEXP allcovariatesSEXP, SEXP adjustedbetasSEXP, SEXP ZpredSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::rowvec& >::type times(timesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type causes(causesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type covariates(covariatesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type cencovariates(cencovariatesSEXP);
    Rcpp::traits::input_parameter< const int& >::type nobs(nobsSEXP);
    Rcpp::traits::input_parameter< const int& >::type ntotal(ntotalSEXP);
    Rcpp::traits::input_parameter< const int& >::type ncovs(ncovsSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type cweight(cweightSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type gammas(gammasSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type cluster(clusterSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type allcluster(allclusterSEXP);
    Rcpp::traits::input_parameter< const int& >::type nc(ncSEXP);
    Rcpp::traits::input_parameter< const int& >::type totalnc(totalncSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type expg(expgSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type iIc(iIcSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type iI(iISEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type idxtlambda(idxtlambdaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type etapsi(etapsiSEXP);
    Rcpp::traits::input_parameter< const int& >::type ntotalobs(ntotalobsSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type allcovariates(allcovariatesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type adjustedbetas(adjustedbetasSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec >::type Zpred(ZpredSEXP);
    rcpp_result_gen = Rcpp::wrap(se_beta_lambda_strata_COX_diff_unstratified(times, causes, covariates, cencovariates, nobs, ntotal, ncovs, cweight, betas, gammas, cluster, allcluster, nc, totalnc, expg, iIc, iI, idxtlambda, etapsi, ntotalobs, allcovariates, adjustedbetas, Zpred));
    return rcpp_result_gen;
END_RCPP
}
// se_beta_lambda_strata_KM_diff
Rcpp::List se_beta_lambda_strata_KM_diff(const arma::rowvec& times, const arma::rowvec& causes, const arma::mat& covariates, const int& nobs, const int& ntotal, const int& ncovs, const arma::rowvec& cweight, const arma::rowvec& betas, const arma::rowvec& cluster, const arma::rowvec& allcluster, const int& nc, const int& totalnc, const arma::mat& iI, const arma::rowvec& idxtlambda, const arma::mat etapsi, const int& ntotalobs, const arma::mat& allcovariates, const arma::rowvec Zpred);
RcppExport SEXP _adjSURVCI_se_beta_lambda_strata_KM_diff(SEXP timesSEXP, SEXP causesSEXP, SEXP covariatesSEXP, SEXP nobsSEXP, SEXP ntotalSEXP, SEXP ncovsSEXP, SEXP cweightSEXP, SEXP betasSEXP, SEXP clusterSEXP, SEXP allclusterSEXP, SEXP ncSEXP, SEXP totalncSEXP, SEXP iISEXP, SEXP idxtlambdaSEXP, SEXP etapsiSEXP, SEXP ntotalobsSEXP, SEXP allcovariatesSEXP, SEXP ZpredSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::rowvec& >::type times(timesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type causes(causesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type covariates(covariatesSEXP);
    Rcpp::traits::input_parameter< const int& >::type nobs(nobsSEXP);
    Rcpp::traits::input_parameter< const int& >::type ntotal(ntotalSEXP);
    Rcpp::traits::input_parameter< const int& >::type ncovs(ncovsSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type cweight(cweightSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type cluster(clusterSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type allcluster(allclusterSEXP);
    Rcpp::traits::input_parameter< const int& >::type nc(ncSEXP);
    Rcpp::traits::input_parameter< const int& >::type totalnc(totalncSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type iI(iISEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type idxtlambda(idxtlambdaSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type etapsi(etapsiSEXP);
    Rcpp::traits::input_parameter< const int& >::type ntotalobs(ntotalobsSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type allcovariates(allcovariatesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec >::type Zpred(ZpredSEXP);
    rcpp_result_gen = Rcpp::wrap(se_beta_lambda_strata_KM_diff(times, causes, covariates, nobs, ntotal, ncovs, cweight, betas, cluster, allcluster, nc, totalnc, iI, idxtlambda, etapsi, ntotalobs, allcovariates, Zpred));
    return rcpp_result_gen;
END_RCPP
}
// se_beta_lambda_strata_KM_diff_unstratified
Rcpp::List se_beta_lambda_strata_KM_diff_unstratified(const arma::rowvec& times, const arma::rowvec& causes, const arma::mat& covariates, const int& nobs, const int& ntotal, const int& ncovs, const arma::rowvec& cweight, const arma::rowvec& betas, const arma::rowvec& cluster, const arma::rowvec& allcluster, const int& nc, const int& totalnc, const arma::mat& iI, const arma::rowvec& idxtlambda, const arma::mat etapsi, const int& ntotalobs, const arma::mat& adjustedcovariates, const arma::rowvec& adjustedbetas, const arma::rowvec Zpred);
RcppExport SEXP _adjSURVCI_se_beta_lambda_strata_KM_diff_unstratified(SEXP timesSEXP, SEXP causesSEXP, SEXP covariatesSEXP, SEXP nobsSEXP, SEXP ntotalSEXP, SEXP ncovsSEXP, SEXP cweightSEXP, SEXP betasSEXP, SEXP clusterSEXP, SEXP allclusterSEXP, SEXP ncSEXP, SEXP totalncSEXP, SEXP iISEXP, SEXP idxtlambdaSEXP, SEXP etapsiSEXP, SEXP ntotalobsSEXP, SEXP adjustedcovariatesSEXP, SEXP adjustedbetasSEXP, SEXP ZpredSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::rowvec& >::type times(timesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type causes(causesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type covariates(covariatesSEXP);
    Rcpp::traits::input_parameter< const int& >::type nobs(nobsSEXP);
    Rcpp::traits::input_parameter< const int& >::type ntotal(ntotalSEXP);
    Rcpp::traits::input_parameter< const int& >::type ncovs(ncovsSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type cweight(cweightSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type cluster(clusterSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type allcluster(allclusterSEXP);
    Rcpp::traits::input_parameter< const int& >::type nc(ncSEXP);
    Rcpp::traits::input_parameter< const int& >::type totalnc(totalncSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type iI(iISEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type idxtlambda(idxtlambdaSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type etapsi(etapsiSEXP);
    Rcpp::traits::input_parameter< const int& >::type ntotalobs(ntotalobsSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type adjustedcovariates(adjustedcovariatesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type adjustedbetas(adjustedbetasSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec >::type Zpred(ZpredSEXP);
    rcpp_result_gen = Rcpp::wrap(se_beta_lambda_strata_KM_diff_unstratified(times, causes, covariates, nobs, ntotal, ncovs, cweight, betas, cluster, allcluster, nc, totalnc, iI, idxtlambda, etapsi, ntotalobs, adjustedcovariates, adjustedbetas, Zpred));
    return rcpp_result_gen;
END_RCPP
}
// se_beta_strata_COX
Rcpp::List se_beta_strata_COX(const arma::rowvec& times, const arma::rowvec& causes, const arma::mat& covariates, const arma::mat& cencovariates, const int& nobs, const int& ncovs, const arma::mat& cweight, const arma::rowvec& betas, const arma::rowvec& gammas, const int& nc, arma::colvec& expg, const arma::mat& iIc);
RcppExport SEXP _adjSURVCI_se_beta_strata_COX(SEXP timesSEXP, SEXP causesSEXP, SEXP covariatesSEXP, SEXP cencovariatesSEXP, SEXP nobsSEXP, SEXP ncovsSEXP, SEXP cweightSEXP, SEXP betasSEXP, SEXP gammasSEXP, SEXP ncSEXP, SEXP expgSEXP, SEXP iIcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::rowvec& >::type times(timesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type causes(causesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type covariates(covariatesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type cencovariates(cencovariatesSEXP);
    Rcpp::traits::input_parameter< const int& >::type nobs(nobsSEXP);
    Rcpp::traits::input_parameter< const int& >::type ncovs(ncovsSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type cweight(cweightSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type gammas(gammasSEXP);
    Rcpp::traits::input_parameter< const int& >::type nc(ncSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type expg(expgSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type iIc(iIcSEXP);
    rcpp_result_gen = Rcpp::wrap(se_beta_strata_COX(times, causes, covariates, cencovariates, nobs, ncovs, cweight, betas, gammas, nc, expg, iIc));
    return rcpp_result_gen;
END_RCPP
}
// se_beta_strata_COX1
Rcpp::List se_beta_strata_COX1(const arma::rowvec& times, const arma::rowvec& causes, const arma::mat& covariates, const arma::mat& cencovariates, const int& nobs, const int& nobs1, const int& ncovs, const arma::mat& cweight, const arma::rowvec& betas, const arma::rowvec& gammas, const int& nc, arma::colvec& expg, const arma::mat& iIc, const arma::cube& zcminusecold, const int& totalnc, const arma::mat& dMC1);
RcppExport SEXP _adjSURVCI_se_beta_strata_COX1(SEXP timesSEXP, SEXP causesSEXP, SEXP covariatesSEXP, SEXP cencovariatesSEXP, SEXP nobsSEXP, SEXP nobs1SEXP, SEXP ncovsSEXP, SEXP cweightSEXP, SEXP betasSEXP, SEXP gammasSEXP, SEXP ncSEXP, SEXP expgSEXP, SEXP iIcSEXP, SEXP zcminusecoldSEXP, SEXP totalncSEXP, SEXP dMC1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::rowvec& >::type times(timesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type causes(causesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type covariates(covariatesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type cencovariates(cencovariatesSEXP);
    Rcpp::traits::input_parameter< const int& >::type nobs(nobsSEXP);
    Rcpp::traits::input_parameter< const int& >::type nobs1(nobs1SEXP);
    Rcpp::traits::input_parameter< const int& >::type ncovs(ncovsSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type cweight(cweightSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type gammas(gammasSEXP);
    Rcpp::traits::input_parameter< const int& >::type nc(ncSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type expg(expgSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type iIc(iIcSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type zcminusecold(zcminusecoldSEXP);
    Rcpp::traits::input_parameter< const int& >::type totalnc(totalncSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type dMC1(dMC1SEXP);
    rcpp_result_gen = Rcpp::wrap(se_beta_strata_COX1(times, causes, covariates, cencovariates, nobs, nobs1, ncovs, cweight, betas, gammas, nc, expg, iIc, zcminusecold, totalnc, dMC1));
    return rcpp_result_gen;
END_RCPP
}
// se_beta_strata_KM
Rcpp::List se_beta_strata_KM(const arma::rowvec& times, const arma::rowvec& causes, const arma::mat& covariates, const int& nobs, const int& ncovs, const arma::rowvec& cweight, const arma::rowvec& betas, const int& nc);
RcppExport SEXP _adjSURVCI_se_beta_strata_KM(SEXP timesSEXP, SEXP causesSEXP, SEXP covariatesSEXP, SEXP nobsSEXP, SEXP ncovsSEXP, SEXP cweightSEXP, SEXP betasSEXP, SEXP ncSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::rowvec& >::type times(timesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type causes(causesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type covariates(covariatesSEXP);
    Rcpp::traits::input_parameter< const int& >::type nobs(nobsSEXP);
    Rcpp::traits::input_parameter< const int& >::type ncovs(ncovsSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type cweight(cweightSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< const int& >::type nc(ncSEXP);
    rcpp_result_gen = Rcpp::wrap(se_beta_strata_KM(times, causes, covariates, nobs, ncovs, cweight, betas, nc));
    return rcpp_result_gen;
END_RCPP
}
// se_beta_strata_COX_survival
Rcpp::List se_beta_strata_COX_survival(const arma::rowvec& times, const arma::rowvec& causes, const arma::mat& covariates, const int& nobs, const int& ncovs, const arma::rowvec& betas, const int& nc, const arma::mat& iI);
RcppExport SEXP _adjSURVCI_se_beta_strata_COX_survival(SEXP timesSEXP, SEXP causesSEXP, SEXP covariatesSEXP, SEXP nobsSEXP, SEXP ncovsSEXP, SEXP betasSEXP, SEXP ncSEXP, SEXP iISEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::rowvec& >::type times(timesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type causes(causesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type covariates(covariatesSEXP);
    Rcpp::traits::input_parameter< const int& >::type nobs(nobsSEXP);
    Rcpp::traits::input_parameter< const int& >::type ncovs(ncovsSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< const int& >::type nc(ncSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type iI(iISEXP);
    rcpp_result_gen = Rcpp::wrap(se_beta_strata_COX_survival(times, causes, covariates, nobs, ncovs, betas, nc, iI));
    return rcpp_result_gen;
END_RCPP
}
// se_lambda_strata_COX
Rcpp::List se_lambda_strata_COX(const arma::rowvec& times, const arma::rowvec& causes, const arma::mat& covariates, const int& nobs, const int& ncovs, const arma::rowvec& betas, const int& nc, const arma::mat& iI, const arma::rowvec& idxtlambda, const int& nctotal, const arma::mat& etai, const int& totalclusters);
RcppExport SEXP _adjSURVCI_se_lambda_strata_COX(SEXP timesSEXP, SEXP causesSEXP, SEXP covariatesSEXP, SEXP nobsSEXP, SEXP ncovsSEXP, SEXP betasSEXP, SEXP ncSEXP, SEXP iISEXP, SEXP idxtlambdaSEXP, SEXP nctotalSEXP, SEXP etaiSEXP, SEXP totalclustersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::rowvec& >::type times(timesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type causes(causesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type covariates(covariatesSEXP);
    Rcpp::traits::input_parameter< const int& >::type nobs(nobsSEXP);
    Rcpp::traits::input_parameter< const int& >::type ncovs(ncovsSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< const int& >::type nc(ncSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type iI(iISEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type idxtlambda(idxtlambdaSEXP);
    Rcpp::traits::input_parameter< const int& >::type nctotal(nctotalSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type etai(etaiSEXP);
    Rcpp::traits::input_parameter< const int& >::type totalclusters(totalclustersSEXP);
    rcpp_result_gen = Rcpp::wrap(se_lambda_strata_COX(times, causes, covariates, nobs, ncovs, betas, nc, iI, idxtlambda, nctotal, etai, totalclusters));
    return rcpp_result_gen;
END_RCPP
}
// se_adjusted_strata_COX
Rcpp::List se_adjusted_strata_COX(const arma::rowvec& times, const arma::rowvec& causes, const arma::mat& covariates, const int& nobs, const int& ncovs, const arma::rowvec& betas, const int& nc, const arma::mat& iI, const arma::rowvec& idxtlambda, const int& nctotal, const arma::mat& etai, const int& totalclusters, const arma::rowvec& newlambda, const arma::mat& allcovariates, const arma::rowvec& betasadjusted, const arma::rowvec Zpred);
RcppExport SEXP _adjSURVCI_se_adjusted_strata_COX(SEXP timesSEXP, SEXP causesSEXP, SEXP covariatesSEXP, SEXP nobsSEXP, SEXP ncovsSEXP, SEXP betasSEXP, SEXP ncSEXP, SEXP iISEXP, SEXP idxtlambdaSEXP, SEXP nctotalSEXP, SEXP etaiSEXP, SEXP totalclustersSEXP, SEXP newlambdaSEXP, SEXP allcovariatesSEXP, SEXP betasadjustedSEXP, SEXP ZpredSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::rowvec& >::type times(timesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type causes(causesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type covariates(covariatesSEXP);
    Rcpp::traits::input_parameter< const int& >::type nobs(nobsSEXP);
    Rcpp::traits::input_parameter< const int& >::type ncovs(ncovsSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< const int& >::type nc(ncSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type iI(iISEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type idxtlambda(idxtlambdaSEXP);
    Rcpp::traits::input_parameter< const int& >::type nctotal(nctotalSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type etai(etaiSEXP);
    Rcpp::traits::input_parameter< const int& >::type totalclusters(totalclustersSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type newlambda(newlambdaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type allcovariates(allcovariatesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type betasadjusted(betasadjustedSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec >::type Zpred(ZpredSEXP);
    rcpp_result_gen = Rcpp::wrap(se_adjusted_strata_COX(times, causes, covariates, nobs, ncovs, betas, nc, iI, idxtlambda, nctotal, etai, totalclusters, newlambda, allcovariates, betasadjusted, Zpred));
    return rcpp_result_gen;
END_RCPP
}
// mybetaestCOX
Rcpp::List mybetaestCOX(const arma::rowvec& times, const arma::rowvec& deltas, const arma::mat& covariates, const arma::rowvec& betas);
RcppExport SEXP _adjSURVCI_mybetaestCOX(SEXP timesSEXP, SEXP deltasSEXP, SEXP covariatesSEXP, SEXP betasSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::rowvec& >::type times(timesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type deltas(deltasSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type covariates(covariatesSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type betas(betasSEXP);
    rcpp_result_gen = Rcpp::wrap(mybetaestCOX(times, deltas, covariates, betas));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_adjSURVCI_mycbind", (DL_FUNC) &_adjSURVCI_mycbind, 2},
    {"_adjSURVCI_myrbind", (DL_FUNC) &_adjSURVCI_myrbind, 2},
    {"_adjSURVCI_myColsums", (DL_FUNC) &_adjSURVCI_myColsums, 1},
    {"_adjSURVCI_myRowsums", (DL_FUNC) &_adjSURVCI_myRowsums, 1},
    {"_adjSURVCI_hhat", (DL_FUNC) &_adjSURVCI_hhat, 4},
    {"_adjSURVCI_mybetaestCENSORING", (DL_FUNC) &_adjSURVCI_mybetaestCENSORING, 5},
    {"_adjSURVCI_betaestCOX", (DL_FUNC) &_adjSURVCI_betaestCOX, 7},
    {"_adjSURVCI_betaestKM", (DL_FUNC) &_adjSURVCI_betaestKM, 7},
    {"_adjSURVCI_mylambdaestCENSORING", (DL_FUNC) &_adjSURVCI_mylambdaestCENSORING, 5},
    {"_adjSURVCI_se_beta_lambda_strata_COX_diff", (DL_FUNC) &_adjSURVCI_se_beta_lambda_strata_COX_diff, 22},
    {"_adjSURVCI_se_beta_lambda_strata_COX_diff1", (DL_FUNC) &_adjSURVCI_se_beta_lambda_strata_COX_diff1, 23},
    {"_adjSURVCI_se_beta_lambda_strata_COX_diff_unstratified", (DL_FUNC) &_adjSURVCI_se_beta_lambda_strata_COX_diff_unstratified, 23},
    {"_adjSURVCI_se_beta_lambda_strata_KM_diff", (DL_FUNC) &_adjSURVCI_se_beta_lambda_strata_KM_diff, 18},
    {"_adjSURVCI_se_beta_lambda_strata_KM_diff_unstratified", (DL_FUNC) &_adjSURVCI_se_beta_lambda_strata_KM_diff_unstratified, 19},
    {"_adjSURVCI_se_beta_strata_COX", (DL_FUNC) &_adjSURVCI_se_beta_strata_COX, 12},
    {"_adjSURVCI_se_beta_strata_COX1", (DL_FUNC) &_adjSURVCI_se_beta_strata_COX1, 16},
    {"_adjSURVCI_se_beta_strata_KM", (DL_FUNC) &_adjSURVCI_se_beta_strata_KM, 8},
    {"_adjSURVCI_se_beta_strata_COX_survival", (DL_FUNC) &_adjSURVCI_se_beta_strata_COX_survival, 8},
    {"_adjSURVCI_se_lambda_strata_COX", (DL_FUNC) &_adjSURVCI_se_lambda_strata_COX, 12},
    {"_adjSURVCI_se_adjusted_strata_COX", (DL_FUNC) &_adjSURVCI_se_adjusted_strata_COX, 16},
    {"_adjSURVCI_mybetaestCOX", (DL_FUNC) &_adjSURVCI_mybetaestCOX, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_adjSURVCI(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
